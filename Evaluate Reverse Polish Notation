public class Solution {
    public int evalRPN(String[] tokens) {
        if(tokens.length==0)return 0;
        //use stack to keep data and push back results of operations. 
        Stack<Integer> s=new Stack<Integer>();
        for(int i=0;i<tokens.length;i++){
            if(!tokens[i].equals("+") && !tokens[i].equals("*") && !tokens[i].equals("/") && !tokens[i].equals("-") ){
                s.push(Integer.parseInt(tokens[i]));
            }
            else{
                if(tokens[i].equals("+")){
                    int t1=s.pop();
                    int t2=s.pop();
                    s.push(t1+t2);
                }
                else if(tokens[i].equals("-")){
                    int t1=s.pop();
                    int t2=s.pop();
                    s.push(t2-t1);
                }
                else if(tokens[i].equals("/")){
                    int t1=s.pop();
                    int t2=s.pop();
                    s.push(t2/t1);
                }
                else{
                    int t1=s.pop();
                    int t2=s.pop();
                    s.push(t1*t2);
                }
            }
        }
        return s.pop();
    }
}
