import java.util.*;
public class Solution {
    public int longestValidParentheses(String s) {
        if(s.length()<2)return 0;
        int l=s.length();
    Stack<Integer> stack=new Stack<Integer>();
    int i=0;
    int out=0;
    int cur=0;
    int start=0;
    
    int ival=-1;
    
    
    
    while(i<l){
        if(s.charAt(i)=='('){
            stack.add(i);
            i++;
        }
        else{
            if(stack.isEmpty()){ival=i;i++;}
            else{
                stack.pop();
                
                if(stack.isEmpty()){
                    out=Math.max(out, i-ival);
                }
                else{
                    out=Math.max(out,i-stack.peek());
                }
                i++;
            }
        }
    }
    
    
    
    
    
    
    
    return out;
    
    
    
   
    }
}
