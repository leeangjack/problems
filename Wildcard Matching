public class Solution {
    public boolean isMatch(String s, String p) {
       
       /* StringBuilder sb=new StringBuilder();
        HashMap<Integer, Integer> map=new HashMap<Integer, Integer>();
        int starCount=0;
        if(p.length()>=1){sb.append(p.charAt(0));
            if(p.charAt(0)=='*')starCount++;
        }
        for(int i=1;i<p.length();i++){
            if(p.charAt(i)=='*' && sb.charAt(sb.length()-1)=='*')continue;
            if(p.charAt(i)=='*'){
                starCount++;
            }
            sb.append(p.charAt(i));
        }
        String pp=sb.toString();
        
        
        for(int i=0;i<pp.length();i++){
            if(pp.charAt(i)=='*'){
                starCount--;
                map.put(i, pp.length()-1-i-starCount);
            }
        } 
        
        return helper(s,sb.toString(),0,0,map);*/
        
        return helperOne(s, p);
    }
    public boolean helperOne(String s, String t){
        
        /*if(t.length()==0)return s.length()==0;
        if(s.length()==0){
             for(int i=0;i<t.length();i++){
                 if(t.charAt(i)!='*')return false;
             }
            return true;
        }
        
         int count=0;
        for(int i=0;i<t.length();i++){
            if(t.charAt(i)!='*')count++;
        }
        if(count>s.length())return false; */
        
        
        
        //if the non'*' character in t is more than s, return false
        int count=0;
        for(int i=0;i<t.length();i++){
            if(t.charAt(i)!='*')count++;
        }
        if(count>s.length())return false; 
        
        
        //p[i][j] is the match results of si and tj, where si is the first character sequence of length i
        boolean[][] p=new boolean[t.length()+1][s.length()+1];
        
        p[0][0]=true;
        
        for(int i=1;i<=t.length();i++){
            if(p[i-1][0]==false)break;
            if(t.charAt(i-1)=='*')p[i][0]=true;
            
        }
        
        
        for(int i=1;i<=t.length();i++){
            for(int j=1;j<=s.length();j++){
                if((p[i][j-1] && t.charAt(i-1)=='*') || (p[i-1][j] && t.charAt(i-1)=='*') || (p[i-1][j-1] && (s.charAt(j-1)==t.charAt(i-1) || t.charAt(i-1)=='*' || t.charAt(i-1)=='?')) )p[i][j]=true;
            }
            
        }
        
        
        return p[t.length()][s.length()];
        
       /* if(s.charAt(0)==t.charAt(0) || t.charAt(0)=='?' || t.charAt(0)=='*')p[0][0]=true;
        
        for(int i=1;i<s.length();i++){
            if(p[0][i-1]==false)break;
            if(t.charAt(0)=='*')p[0][i]=true;
            
        }
         for(int i=1;i<t.length();i++){
            if(p[i-1][0]==false)break;
            if(t.charAt(i)=='*')p[i][0]=true;
            
        }
        
        for(int i=1;i<t.length();i++){
            for(int j=1;j<s.length();j++){
                if((p[i-1][j-1] && (s.charAt(j)==t.charAt(i) || t.charAt(i)=='?' || t.charAt(i)=='*')) || (p[i-1][j] && t.charAt(i)=='*' ) || (p[i][j-1] && t.charAt(i)=='*'))p[i][j]=true;
            }
        }
        
        
        return p[t.length()-1][s.length()-1];*/
    }
    
    /* public boolean helper(String s, String t, int i, int j, HashMap<Integer, Integer> map){
        //if t is finished, s should be finished as well
        if(j>=t.length()){
            return i>=s.length();
        }
        //if s is finished, the next char of t must be * to continue
        if(i>=s.length()){
            if(t.charAt(j)=='*')return helper(s,t,i,j+1,map);
            return false;
        }
        
        if(s.charAt(i)==t.charAt(j) || t.charAt(j)=='?')return helper(s, t, i+1, j+1, map);
        
        if(t.charAt(j)=='*'){
            int temp=i;
            while(temp<=s.length()-map.get(j)){
                if(helper(s,t,temp,j+1,map))return true;
                temp++;
            }
            return false;
        }
        
        return false;
        
    }  */
}
